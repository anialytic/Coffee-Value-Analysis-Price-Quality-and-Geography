# відкрити файл
import pandas as pd
file = input('Please enter .csv:')
df = pd.read_csv(file, sep=";", on_bad_lines="skip")

#print(df.columns.tolist())

#column_to_show = ["roaster_location"]

# список локацій
# TODO: деякі локації повторюються через орфарграфічні помилки, слово місто зайве

location_list = df["roaster_location"].tolist()
normalize = {
    "Hilo, Hawai’i Island, Hawai’i": "Hilo, Hawaii",
    "Hilo, Hawai'i": "Hilo, Hawaii",
#    "Chia-Yi, Taiwan",
#    "Cleveland, Tennessee",
	"Jersey City, New Jersey": "Jersey, New Jersey",
#	"Chia-Yi, Taiwan",
#	"Taichung, Taiwan",
#	"Yunlin, Taiwan",
#	"Taipei, Taiwan",
#	"Madison, Wisconsin",
#	"Yilan, Taiwan",
#	"Charlotte, North Carolina",
#	"Peoria, Illinois",
#	"Floyd, Virginia",
#	"Hilo, Hawai’i Island, Hawai’i",
#	"San Diego, California",
#	"Fort Wayne, Indiana",
#	"Hilo, Hawai'i",
#	"Durango, Colorado",
#	"Norfolk, Virginia",
#	"Glendale, California",
#	"Santa Fe, New Mexico",
#	"Los Angeles, California",
#	"Tulsa, Oklahoma",
#	"Tainan, Taiwan",
	"Baronett, Wisconsin": "Barronett, Wisconsin",
#	"McHenry, Illinois",
#	"Tiachung, Taiwan",
#	"Kaohsiung, Taiwan",
#	"Satipo Province, Peru",
	"New Taipei City, Taiwan": "New Taipei, Taiwan",
#	"Reno, Nevada",
#	"Lexington, Virginia",
#	"Taitung, Taiwan",
#	"Manlius, New York",
#	"Topeka, Kansas",
	"Mountain View, Hawai'i": "Mountain View, Hawaii",
#	"Denver, Colorado",
	"Antigua Guatemala, Guatemala": "Antigua, Guatemala",
#	"Thermopolis, Wyoming",
#	"Truckee, California",
	"Sacramento, Calfornia": "Sacramento, California",
#	"Sacramento, California",
#	"Lee, Massachusetts",
#	"Osaka, Japan",
#	"Viroqua, Wisconsin",
#	"Olympia, Washington",
#	"Hilo, Hawai’i",
#	"Barronett, Wisconsin",
#	"Taoyuan, Taiwan",
	"Holualoa, Hawai’i": "Holualoa, Hawaii",
	"Taipei City, Taiwan": "Taipei, Taiwan",
#	"Chicago, Illinois",
#	"Livingston, Montana",
	"Long Island City, New York": "Long Island, New York",
#	"Pahala, Hawaii",
#	"Plymouth, Massachusetts",
	"Tainan City, Taiwan": "Tainan, Taiwan",
#	"Zhubei, Taiwan",
#	"Durham, North Carolina",
#	"Caotun, Nantou, Taiwan",
#	"Hilo, Hawaii",
#	"Billings, Montana",
#	"Buffalo, New York",
#	"Conway, Arkansas",
#	"Dallas, Texas",
#	"Boulder, Colorado",
#	"Holualoa, Hawaii",
	"Dali District, Taichung, Taiwan": "Taichung, Taiwan",
#	"Columbus, Ohio",
#	"Portland, Maine",
#	"Berkeley, California",
#	"Ashland, Oregon",
	"Mountain View, Hawai’i": "Mountain View, Hawaii",
	"Kihei, Maui, Hawai’i": "Maui, Hawaii",
	"Pahala, “Big Island” of Hawai’i": "Pahala, Hawaii",
#	"Hsinchu, Taiwan",
#	"Crystal Lake, Illinois",
#	"San Jose, California",
#	"San Rafael, California",
	"Hilo, Big Island of Hawai'i": "Hilo, Hawaii",
#	"Richmond, Virginia",
#	"Changhua, Taiwan",
#	"Taiyuan, Taiwan",
#	"Bozeman, Montana",
#	"Johns Creek, Georgia",
	"Hilo, Big Island of Hawai’i": "Hilo, Hawaii",
#	"Lake Forest, Illinois",
#	"Seoul, South Korea",
#	"Waterbury Center, Vermont",
#	"Phoenix, Arizona",
#	"Mount Shasta, California",
#	"Nantou, Taiwan",
#	"Minneapolis, Minnesota",
#	"Savannah, Georgia",
#	"Hong Kong, China",
#	"Macao, China",
#	"Redding, California",
#	"Minnesota, Minnesota",
#	"Big Lake, Alaska",
#	"Rochester, New York",
#	"Antigua, Guatemala",
#	"Lincoln, California",
#	"Montrose, Colorado",
#	"Toronto, Canada",
#	"Youngstown, Ohio",
#	"Mountain View, Hawaii",
#	"Manassas, Virginia",
#	"Tucson, Arizona",
#	"Miami, Florida",
#	"Henderson, Nevada",
#	"Ventura, California",
#	"London, England",
#	"Harrisonburg, Virginia",
	"Douliou City, Taiwan": "Douliou, Taiwan",
#	"Taiwan",
	"Pahala, Hawai'i": "Pahala, Hawaii",
	"Kiambu County, Kenya": "Kiambu, Kenya",
	"Taoyuan City, Taiwan": "Taoyuan, Taiwan",
	"Chia-Yi City, Taiwan": "Chia-Yi, Taiwan",
#	"Martinez, California",
	"Chiya-Yi, Taiwan": "Chia-Yi, Taiwan",
#	"Branford Connecticut",
#	"Albuquerque, New Mexico",
#	"Tequesta, Florida",
#	"Branford, Connecticut",
#	"Washington, D.C.",
#	"Pingtung, Taiwan",
#	"Spokane, Washington",
	"Taichung City, Taiwan": "Taichung, Taiwan",
#	"Houston, Texas",
#	"Hamilton, Montana",
#	"Suwanee, Georgia",
#	"Bogota, Colombia",
	"Kaohsiung City, Taiwan": "Kaohsiung, Taiwan",
	"Captain Cook, Hawai’i": "Captain Cook, Hawaii",
#	"Lloydminster, Saskatchewan, Canada",
	"Llayla District, Satipo Province, Peru": "Llayla, Peru",
#	"Keelung, Taiwan",
#	"Captain Cook, Hawaii",
#	"Toronto, Ontario, Canada",
#	"Bedford, New Hampshire",
#	"Carlsbad, California",
#	"Santa Rosa Beach, Florida",
#	"Ka'u, Hawaii",
	"Kihei, Maui, Hawaii": "Maui, Hawaii",
#	"Eugene, Oregon",
#	"Renton, Washington",
#	"Atlanta, Georgia",
#	"Des Moines, Iowa",
#	"Jackson, Mississippi",
#	"Roanoke, Virginia and Floyd, Virginia",
#	"San Francisco, California",
#	"Carbondale, Colorado",
#	"Fort Bragg, California",
#	"Austin, Texas",
#	"Jakarta, Indonesia",
#	"Emeryville, California",
#	"Newtown, Sydney, Australia",
#	"Portland, Oregon",
#	"Santa Monica, California",
	"I-Lan City, Taiwan": "I-Lan, Taiwan",
#	"Charlottesville, Virginia",
#	"San Juan Lachao, Oaxaca, Mexico",
#	"Silver Lake, Minnesota",
#	"Shanghai, China",
#	"Vancouver, British Columbia, Canada",
#	"Boston, Massachusetts",
	"Minxiong, Chia-Yi, Taiwan": "Chia-Yi, Taiwan",
#	"Belmar, New Jersey",
#	"Brooklyn, New York",
	"Changhua County, Taiwan": "Changhua, Taiwan",
#	"Hillsborough, North Carolina",
	"Sacramento, Californiaa": "Sacramento, California",
	"Sacamento, California": "Sacramento, California",
	"Zhubei City, Taiwan": "Zhubei, Taiwan",
#	"Thornton, Colorado",
#	"Ramsey, Minnesota",
#	"Louisville, Kentucky",
#	"Oakville, Ontario, Canada",
#	"Torrington, Connecticut",
#	"Chino, California",
#	"Daejeon, South Korea",
	"Kaohslung City, Taiwan": "Kaohslung, Taiwan",
#	"Markham, Ontario, Canada",
#	"Holulaloa, Hawaii",
#	"St. Louis, MIssouri",
#	"Seattle, Washington",
#	"Driftless, Wisconsin",
#	"Newport Beach, California",
#	"Duluth, Minnesota",
#	"Fort Lauderdale, Florida",
#	"Washington, DC",
#	"Burlington, Vermont",
#	"Yongin-Si, South Korea",
	"Pu'Er Yunnan Province, China": "Pu’Er, China",
#	"Suzhou, China",
#	"New Orleans, Louisiana",
#	"Post Falls, Idaho",
	"Santa Ana growing region, El Salvador": "Santa Ana, El Salvador",
#	"Ovledo, Florida",
#	"La Jolla, California",
#	"Lake, Michigan",
	"Hsinchu City, Taiwan": "Hsinchu, Taiwan",
	"Pu’Er, Yunnan Province, China": "Pu’Er, China",
#	"Yorktown Heights, New York",
#	"Highland Park, New Jersey",
	"Paju City (Gyeonggi-do), South Korea": "Paju, South Korea",
#	"Longwood, Florida",
#	"Bellingham, Washington",
	"Billings, Montana.": "Billings, Montana",
#	"Oakland, California",
#	"San Luis Obispo, California",
#	"South Korea",
	"Sacr": "Sacramento, California",
#	"Kowloon, Hong Kong, China",
#	"Redlands, California",
#	"Raleigh, North Carolina",
#	"Cambria, California",
#	"Seoul, Korea",
#	"Everett, Washington",
#	"Berlin, Massachusetts",
#	"Calgary, Alberta, Canada",
#	"Anchorage, Alaska",
#	"Acton, Massachusetts",
#	"Annapolis, Maryland",
#	"Waterbury, Vermont",
#	"New Brunswick, New Jersey",
	"Taoyuan City, Taiwan.": "Taoyuan, Taiwan",
	"Lexington, Virginia.": "Lexington, Virginia",
	"Madison, Wisconsin.": "Madison, Wisconsin",
#	"Sioux Falls, South Dakota",
#	"Upland, California",
#	"Hudson, New York",
#	"Ithaca, New York",
#	"London, Ontario, Canada",
#	"Salem, Massachusetts",
#	"Richmond, British Columbia, Canada",
#	"Richmond Hill, Ontario, Canada",
	"Kansas City, Missouri": "Kansas, Missouri",
#	"Arlington, Massachusetts",
#	"San Dimas, California",
#	"Beverly, Massachusetts",
#	"Anoka, Minnesota",
#	"North Hollywood, California",
#	"Milwaukee, Wisconsin",
#	"Philadelphia, Pennsylvania",
#	"Arcata, California",
#	"Langhorne, Pennsylvania",
#	"Boise, Idaho",
#	"Fairbanks, Alaska",
#	"New Haven, Connecticut",
#	"Lake Tahoe, California",
#	"Maui, Hawaii"
}

cleaned_location_list = [normalize.get(name, name) for name in location_list]

# перевірка результату
print(cleaned_location_list[:20])


# умовне виконання 
#def clean_name(name):
#    name = name.lower()
#    if "county" in name:
#        name = name.replace("county", "")
#    if "city" in name:
#        name = name.replace("city", "")
#    if "district" in name:
#        name = name.replace("district", "")
#    if "." in name:
#        name = name.replace(".", "")
#    if "rowing region" in name:
#        name = name.replace("growing region", "")    
#    if "hawai’i island," in name:
#        name = name.replace("hawai’island,", " ")    
#    return name.strip()
    
#
#df["clean_location"] = df["roaster_location"].apply(clean_name)

# зберегти результат у новий файл
#df.to_csv("location_clean.csv", index=False)
#print("Файл збережено як location_clean.csv")
 
# парсинг локацій
# TODO: не всі останні записи - країни, деякі штати
#def parse_location(s):
#   parts = [p.strip() for p in s.split(',')]
#    if len(parts) == 1:
#        return [parts[0], '']         #  місто
#    else:
#        city = parts[0]
#        country = parts[-1]           # остання частина як країна
#        return [city, country]

#parsed = [parse_location(x) for x in data]

