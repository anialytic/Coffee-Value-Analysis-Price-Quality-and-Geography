# відкрити файл
import pandas as pd
file = input('Please enter .csv:')
df = pd.read_csv(file, sep=";", on_bad_lines="skip")

# перевірити назви колонок
#print(df.columns.tolist())

#column_to_show = ["roaster_location"]

# список локацій для стандартизації через словник заміни
location_list = df["roaster_location"].tolist()
normalize = {
    "Hilo, Hawai’i Island, Hawai’i": "Hilo, Hawaii",
    "Hilo, Hawai'i": "Hilo, Hawaii",
#    "Chia-Yi, Taiwan",
#    "Cleveland, Tennessee",
	"Jersey City, New Jersey": "Jersey, New Jersey",
#	"Chia-Yi, Taiwan",
#	"Taichung, Taiwan",
#	"Yunlin, Taiwan",
#	"Taipei, Taiwan",
#	"Madison, Wisconsin",
#	"Yilan, Taiwan",
#	"Charlotte, North Carolina",
#	"Peoria, Illinois",
#	"Floyd, Virginia",
	"Hilo, Hawai’i Island, Hawai’i": "Hilo, Hawaii",
#	"San Diego, California",
#	"Fort Wayne, Indiana",
#	"Hilo, Hawai'i",
#	"Durango, Colorado",
#	"Norfolk, Virginia",
#	"Glendale, California",
#	"Santa Fe, New Mexico",
#	"Los Angeles, California",
#	"Tulsa, Oklahoma",
#	"Tainan, Taiwan",
	"Baronett, Wisconsin": "Barronett, Wisconsin",
#	"McHenry, Illinois",
#	"Tiachung, Taiwan",
#	"Kaohsiung, Taiwan",
#	"Satipo Province, Peru",
	"New Taipei City, Taiwan": "New Taipei, Taiwan",
#	"Reno, Nevada",
#	"Lexington, Virginia",
#	"Taitung, Taiwan",
#	"Manlius, New York",
#	"Topeka, Kansas",
	"Mountain View, Hawai'i": "Mountain View, Hawaii",
#	"Denver, Colorado",
	"Antigua Guatemala, Guatemala": "Antigua, Guatemala",
#	"Thermopolis, Wyoming",
#	"Truckee, California",
	"Sacramento, Calfornia": "Sacramento, California",
#	"Sacramento, California",
#	"Lee, Massachusetts",
#	"Osaka, Japan",
#	"Viroqua, Wisconsin",
#	"Olympia, Washington",
	"Hilo, Hawai’i": "Hilo, Hawaii",
#	"Barronett, Wisconsin",
#	"Taoyuan, Taiwan",
	"Holualoa, Hawai’i": "Holualoa, Hawaii",
	"Taipei City, Taiwan": "Taipei, Taiwan",
#	"Chicago, Illinois",
#	"Livingston, Montana",
	"Long Island City, New York": "Long Island, New York",
#	"Pahala, Hawaii",
#	"Plymouth, Massachusetts",
	"Tainan City, Taiwan": "Tainan, Taiwan",
#	"Zhubei, Taiwan",
#	"Durham, North Carolina",
	"Caotun, Nantou, Taiwan": "Caotun, Taiwan",
#	"Hilo, Hawaii",
#	"Billings, Montana",
#	"Buffalo, New York",
#	"Conway, Arkansas",
#	"Dallas, Texas",
#	"Boulder, Colorado",
#	"Holualoa, Hawaii",
	"Dali District, Taichung, Taiwan": "Taichung, Taiwan",
#	"Columbus, Ohio",
#	"Portland, Maine",
#	"Berkeley, California",
#	"Ashland, Oregon",
	"Mountain View, Hawai’i": "Mountain View, Hawaii",
	"Kihei, Maui, Hawai’i": "Maui, Hawaii",
	"Pahala, “Big Island” of Hawai’i": "Pahala, Hawaii",
#	"Hsinchu, Taiwan",
#	"Crystal Lake, Illinois",
#	"San Jose, California",
#	"San Rafael, California",
	"Hilo, Big Island of Hawai'i": "Hilo, Hawaii",
#	"Richmond, Virginia",
#	"Changhua, Taiwan",
#	"Taiyuan, Taiwan",
#	"Bozeman, Montana",
#	"Johns Creek, Georgia",
	"Hilo, Big Island of Hawai’i": "Hilo, Hawaii",
#	"Lake Forest, Illinois",
#	"Seoul, South Korea",
	"Waterbury Center, Vermont": "Waterbury, Vermont",
#	"Phoenix, Arizona",
#	"Mount Shasta, California",
#	"Nantou, Taiwan",
#	"Minneapolis, Minnesota",
#	"Savannah, Georgia",
#	"Hong Kong, China",
#	"Macao, China",
#	"Redding, California",
#	"Minnesota, Minnesota",
#	"Big Lake, Alaska",
#	"Rochester, New York",
#	"Antigua, Guatemala",
#	"Lincoln, California",
#	"Montrose, Colorado",
#	"Toronto, Canada",
#	"Youngstown, Ohio",
#	"Mountain View, Hawaii",
#	"Manassas, Virginia",
#	"Tucson, Arizona",
#	"Miami, Florida",
#	"Henderson, Nevada",
#	"Ventura, California",
#	"London, England",
#	"Harrisonburg, Virginia",
	"Douliou City, Taiwan": "Douliou, Taiwan",
#	"Taiwan",
	"Pahala, Hawai'i": "Pahala, Hawaii",
	"Kiambu County, Kenya": "Kiambu, Kenya",
	"Taoyuan City, Taiwan": "Taoyuan, Taiwan",
	"Chia-Yi City, Taiwan": "Chia-Yi, Taiwan",
#	"Martinez, California",
	"Chiya-Yi, Taiwan": "Chia-Yi, Taiwan",
	"Branford Connecticut": "Branford, Connecticut",
#	"Albuquerque, New Mexico",
#	"Tequesta, Florida",
#	"Branford, Connecticut",
#	"Washington, D.C.",
#	"Pingtung, Taiwan",
#	"Spokane, Washington",
	"Taichung City, Taiwan": "Taichung, Taiwan",
#	"Houston, Texas",
#	"Hamilton, Montana",
#	"Suwanee, Georgia",
#	"Bogota, Colombia",
	"Kaohsiung City, Taiwan": "Kaohsiung, Taiwan",
	"Captain Cook, Hawai’i": "Captain Cook, Hawaii",
	"Lloydminster, Saskatchewan, Canada": "Lloydminster, Canada",
	"Llayla District, Satipo Province, Peru": "Llayla, Peru",
#	"Keelung, Taiwan",
#	"Captain Cook, Hawaii",
	"Toronto, Ontario, Canada": "Toronto, Canada",
#	"Bedford, New Hampshire",
#	"Carlsbad, California",
#	"Santa Rosa Beach, Florida",
#	"Ka'u, Hawaii",
	"Kihei, Maui, Hawaii": "Maui, Hawaii",
#	"Eugene, Oregon",
#	"Renton, Washington",
#	"Atlanta, Georgia",
#	"Des Moines, Iowa",
#	"Jackson, Mississippi",
	"Roanoke, Virginia and Floyd, Virginia": "Roanoke, Virginia",
#	"San Francisco, California",
#	"Carbondale, Colorado",
#	"Fort Bragg, California",
#	"Austin, Texas",
#	"Jakarta, Indonesia",
#	"Emeryville, California",
	"Newtown, Sydney, Australia": "Newtown, Australia",
#	"Portland, Oregon",
#	"Santa Monica, California",
	"I-Lan City, Taiwan": "I-Lan, Taiwan",
#	"Charlottesville, Virginia",
	"San Juan Lachao, Oaxaca, Mexico": "San Juan Lachao, Mexico",
#	"Silver Lake, Minnesota",
#	"Shanghai, China",
	"Vancouver, British Columbia, Canada": "Vancouver, Canada",
#	"Boston, Massachusetts",
	"Minxiong, Chia-Yi, Taiwan": "Chia-Yi, Taiwan",
#	"Belmar, New Jersey",
#	"Brooklyn, New York",
	"Changhua County, Taiwan": "Changhua, Taiwan",
#	"Hillsborough, North Carolina",
	"Sacramento, Californiaa": "Sacramento, California",
	"Sacamento, California": "Sacramento, California",
	"Zhubei City, Taiwan": "Zhubei, Taiwan",
#	"Thornton, Colorado",
#	"Ramsey, Minnesota",
#	"Louisville, Kentucky",
	"Oakville, Ontario, Canada": "Oakville, Canada",
#	"Torrington, Connecticut",
#	"Chino, California",
#	"Daejeon, South Korea",
	"Kaohslung City, Taiwan": "Kaohslung, Taiwan",
	"Markham, Ontario, Canada": "Markham, Canada",
	"Holulaloa, Hawaii": "Holualoa, Hawaii",
	"St. Louis, MIssouri": "St. Louis, Missouri",
#	"Seattle, Washington",
#	"Driftless, Wisconsin",
#	"Newport Beach, California",
#	"Duluth, Minnesota",
#	"Fort Lauderdale, Florida",
	"Washington, DC": "Washington, D.C.",
#	"Burlington, Vermont",
#	"Yongin-Si, South Korea",
	"Pu'Er Yunnan Province, China": "Pu’Er, China",
#	"Suzhou, China",
#	"New Orleans, Louisiana",
#	"Post Falls, Idaho",
	"Santa Ana growing region, El Salvador": "Santa Ana, El Salvador",
#	"Ovledo, Florida",
#	"La Jolla, California",
#	"Lake, Michigan",
	"Hsinchu City, Taiwan": "Hsinchu, Taiwan",
	"Pu’Er, Yunnan Province, China": "Pu’Er, China",
#	"Yorktown Heights, New York",
#	"Highland Park, New Jersey",
	"Paju City (Gyeonggi-do), South Korea": "Paju, South Korea",
#	"Longwood, Florida",
#	"Bellingham, Washington",
	"Billings, Montana.": "Billings, Montana",
#	"Oakland, California",
#	"San Luis Obispo, California",
#	"South Korea",
	"Sacr": "Sacramento, California",
	"Kowloon, Hong Kong, China": "Hong Kong, China",
#	"Redlands, California",
#	"Raleigh, North Carolina",
#	"Cambria, California",
	"Seoul, Korea": "Seoul, South Korea",
#	"Everett, Washington",
#	"Berlin, Massachusetts",
	"Calgary, Alberta, Canada": "Calgary, Canada",
#	"Anchorage, Alaska",
#	"Acton, Massachusetts",
#	"Annapolis, Maryland",
#	"Waterbury, Vermont",
#	"New Brunswick, New Jersey",
	"Taoyuan City, Taiwan.": "Taoyuan, Taiwan",
	"Lexington, Virginia.": "Lexington, Virginia",
	"Madison, Wisconsin.": "Madison, Wisconsin",
#	"Sioux Falls, South Dakota",
#	"Upland, California",
#	"Hudson, New York",
#	"Ithaca, New York",
	"London, Ontario, Canada": "London, Canada",
#	"Salem, Massachusetts",
	"Richmond, British Columbia, Canada": "Richmond, Canada",
	"Richmond Hill, Ontario, Canada": "Richmond Hill, Canada",
	"Kansas City, Missouri": "Kansas, Missouri",
#	"Arlington, Massachusetts",
#	"San Dimas, California",
#	"Beverly, Massachusetts",
#	"Anoka, Minnesota",
#	"North Hollywood, California",
#	"Milwaukee, Wisconsin",
#	"Philadelphia, Pennsylvania",
#	"Arcata, California",
#	"Langhorne, Pennsylvania",
#	"Boise, Idaho",
#	"Fairbanks, Alaska",
#	"New Haven, Connecticut",
#	"Lake Tahoe, California",
#	"Maui, Hawaii"
}

cleaned_location_list = [normalize.get(name, name) for name in location_list]

# перевірка результату
# print(cleaned_location_list[:20])

# очищення
def clean_name(x):
    return normalize.get(x, x)

# нова колонка
df["clean_location"] = df["roaster_location"].apply(clean_name)

# умовне виконання 
#def clean_name(name):
#    name = name.lower()
#    if "county" in name:
#        name = name.replace("county", "")
#    if "city" in name:
#        name = name.replace("city", "")
#    if "district" in name:
#        name = name.replace("district", "")
#    if "." in name:
#        name = name.replace(".", "")
#    if "rowing region" in name:
#        name = name.replace("growing region", "")    
#    if "hawai’i island," in name:
#        name = name.replace("hawai’island,", " ")    
#    return name.strip()
    
# нова колонка
#df["clean_location"] = df["roaster_location"].apply(clean_name)

# зберегти у новий файл
#df.to_csv("location_clean.csv", index=False)
#print("Файл збережено як location_clean.csv")
 
# парсинг локацій
# TODO: не всі останні записи - країни, деякі штати
#def parse_location(s):
#   parts = [p.strip() for p in s.split(',')]
#    if len(parts) == 1:
#        return [parts[0], '']         #  місто
#    else:
#        city = parts[0]
#        country = parts[-1]           # остання частина це країна
#        return [city, country]

#parsed = [parse_location(x) for x in data]

# словник країн
city_to_country = {
   	"Acton, Massachusetts",
 	"Albuquerque, New Mexico",
 	"Anchorage, Alaska",
 	"Annapolis, Maryland",
 	"Anoka, Minnesota",
	"Antigua, Guatemala",
 	"Arcata, California",
 	"Arlington, Massachusetts",
 	"Ashland, Oregon",
 	"Atlanta, Georgia",
 	"Austin, Texas",
 	"Barronett, Wisconsin",
 	"Bedford, New Hampshire",
 	"Bellingham, Washington",
 	"Belmar, New Jersey",
 	"Berkeley, California",
 	"Berlin, Massachusetts",
 	"Beverly, Massachusetts",
 	"Big Lake, Alaska",
	"Billings, Montana",
 	"Bogota, Colombia",
 	"Boise, Idaho",
 	"Boston, Massachusetts",
 	"Boulder, Colorado",
 	"Bozeman, Montana",
	"Branford, Connecticut",
 	"Brooklyn, New York",
 	"Buffalo, New York",
 	"Burlington, Vermont",
	"Calgary, Canada",
 	"Cambria, California",
	"Caotun, Taiwan",
	"Captain Cook, Hawaii",
 	"Carbondale, Colorado",
 	"Carlsbad, California",
 	"Changhua, Taiwan",
 	"Charlotte, North Carolina",
 	"Charlottesville, Virginia",
	"Chia-Yi, Taiwan",
	"Chicago, Illinois",
 	"Chino, California",
    "Cleveland, Tennessee",
 	"Columbus, Ohio",
 	"Conway, Arkansas",
 	"Crystal Lake, Illinois",
 	"Daejeon, South Korea",
 	"Dallas, Texas",
 	"Denver, Colorado",
 	"Des Moines, Iowa",
	"Douliou, Taiwan",
 	"Driftless, Wisconsin",
 	"Duluth, Minnesota",
 	"Durango, Colorado",
 	"Durham, North Carolina",
 	"Emeryville, California",
 	"Eugene, Oregon",
 	"Everett, Washington",
 	"Fairbanks, Alaska",
 	"Floyd, Virginia",
 	"Fort Bragg, California",
 	"Fort Lauderdale, Florida",
 	"Fort Wayne, Indiana",
 	"Glendale, California",
 	"Hamilton, Montana",
 	"Harrisonburg, Virginia",
 	"Henderson, Nevada",
 	"Highland Park, New Jersey",
 	"Hillsborough, North Carolina",
	"Hilo, Hawaii",
	"Holualoa, Hawaii",
 	"Hong Kong, China",
 	"Houston, Texas",
	"Hsinchu, Taiwan",
 	"Hudson, New York",
	"I-Lan, Taiwan",
 	"Ithaca, New York",
 	"Jackson, Mississippi",
 	"Jakarta, Indonesia",
	"Jersey, New Jersey",
 	"Johns Creek, Georgia",
	"Kansas, Missouri",
	"Kaohslung, Taiwan",
 	"Ka'u, Hawaii",
 	"Keelung, Taiwan",
	"Kiambu, Kenya",
 	"La Jolla, California",
 	"Lake Forest, Illinois",
 	"Lake Tahoe, California",
 	"Lake, Michigan",
 	"Langhorne, Pennsylvania",
 	"Lee, Massachusetts",
	"Lexington, Virginia",
 	"Lincoln, California",
 	"Livingston, Montana",
	"Llayla, Peru",
    "Lloydminster, Canada",
	"London, Canada",
 	"London, England",
	"Long Island, New York",
 	"Longwood, Florida",
 	"Los Angeles, California",
 	"Louisville, Kentucky",
 	"Macao, China",
 	"Madison, Wisconsin",
 	"Manassas, Virginia",
 	"Manlius, New York",
	"Markham, Canada",
 	"Martinez, California",
	"Maui, Hawaii",
 	"McHenry, Illinois",
 	"Miami, Florida",
 	"Milwaukee, Wisconsin",
 	"Minneapolis, Minnesota",
 	"Minnesota, Minnesota",
 	"Montrose, Colorado",
 	"Mount Shasta, California",
	"Mountain View, Hawaii",
 	"Nantou, Taiwan",
 	"New Brunswick, New Jersey",
 	"New Haven, Connecticut",
 	"New Orleans, Louisiana",
	"New Taipei, Taiwan",
 	"Newport Beach, California",
	"Newtown, Australia",
 	"Norfolk, Virginia",
 	"North Hollywood, California",
 	"Oakland, California",
 	"Olympia, Washington",
 	"Osaka, Japan",
 	"Ovledo, Florida",
	"Pahala, Hawaii",
	"Paju, South Korea",
 	"Peoria, Illinois",
 	"Philadelphia, Pennsylvania",
 	"Phoenix, Arizona",
 	"Pingtung, Taiwan",
 	"Plymouth, Massachusetts",
 	"Portland, Maine",
 	"Portland, Oregon",
 	"Post Falls, Idaho",
    "Pu’Er, China",
 	"Raleigh, North Carolina",
 	"Ramsey, Minnesota",
 	"Redding, California",
 	"Redlands, California",
 	"Reno, Nevada",
 	"Renton, Washington",
	"Richmond Hill, Canada",
	"Richmond, Canada",
 	"Richmond, Virginia",
	"Roanoke, Virginia",
 	"Rochester, New York",
	"Sacramento, California",
 	"Salem, Massachusetts",
 	"San Diego, California",
 	"San Dimas, California",
 	"San Francisco, California",
 	"San Jose, California",
	"San Juan Lachao, Mexico",
 	"San Luis Obispo, California",
 	"San Rafael, California",
	"Santa Ana, El Salvador",
 	"Santa Fe, New Mexico",
 	"Santa Monica, California",
 	"Santa Rosa Beach, Florida",
 	"Satipo Province, Peru",
 	"Savannah, Georgia",
 	"Seattle, Washington",
 	"Seoul, South Korea",
 	"Shanghai, China",
 	"Silver Lake, Minnesota",
 	"Sioux Falls, South Dakota",
 	"South Korea",
 	"Spokane, Washington",
	"St. Louis, Missouri",
 	"Suwanee, Georgia",
 	"Suzhou, China",
 	"Taichung, Taiwan",
 	"Tainan, Taiwan",
	"Taipei, Taiwan",
 	"Taitung, Taiwan",
 	"Taiwan",
 	"Taiyuan, Taiwan",
	"Taoyuan, Taiwan",
 	"Tequesta, Florida",
 	"Thermopolis, Wyoming",
 	"Thornton, Colorado",
 	"Tiachung, Taiwan",
 	"Topeka, Kansas",
	"Toronto, Canada",
 	"Torrington, Connecticut",
 	"Truckee, California",
 	"Tucson, Arizona",
 	"Tulsa, Oklahoma",
 	"Upland, California",
	"Vancouver, Canada",
 	"Ventura, California",
 	"Viroqua, Wisconsin",
	"Washington, D.C.",
 	"Waterbury, Vermont",
 	"Yilan, Taiwan",
 	"Yongin-Si, South Korea",
 	"Yorktown Heights, New York",
 	"Youngstown, Ohio",
 	"Yunlin, Taiwan",
	"Zhubei, Taiwan",
	"Oakville, Canada",
}

# список штатів США
us_states = {
    "Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut",
    "Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa",
    "Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan",
    "Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada",
    "New Hampshire","New Jersey","New Mexico","New York","North Carolina",
    "North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island",
    "South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont",
    "Virginia","Washington","West Virginia","Wisconsin","Wyoming"
}
# створити нову колонку з назвати країн
def extract_country(place: str) -> str:
    try:
        city, region = [p.strip() for p in place.split(",", 1)]
    except ValueError:
        return None
    if region in us_states:
        return "USA"
    return region 
df["Country"] = df["clean_location"].apply(extract_country)

print(df)

# зберегти у новий файл
output_file = "cleaned_" + file
df.to_csv(output_file, sep=";", index=False)
print(f"Новий файл збережено як: {output_file}")
print(df.head())